% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parscrape.R
\name{parscrape}
\alias{parscrape}
\title{parallelize execution of RSelenium}
\usage{
parscrape(
  scrape_fun,
  scrape_input,
  cores,
  packages = c("base"),
  browser,
  ports = NULL,
  chunk_size = NULL,
  scrape_tries = 2,
  proxy = NULL
)
}
\arguments{
\item{scrape_fun}{a function with input x sending instructions to remDr (remote driver)/ scraping function to be parallelized}

\item{scrape_input}{a data frame, list, or vector where each element is an input to be passed to scrape_function}

\item{cores}{number of cores to run RSelenium instances on. Defaults to available cores - 1.}

\item{packages}{a character vector with package names of packages used in scrape_function}

\item{browser}{a character vector specifying the browser to be used}

\item{ports}{vector of ports for RSelenium instances (if left at default NULL parscrape will randomly generate ports)}

\item{chunk_size}{number of scrape_input elements to be processed per round of scrape_function (parscrape splits scrape_input into chunks and runs scrape_function in multiple rounds to avoid loosing data due to errors). Defaults to number of cores.}

\item{scrape_tries}{sets number of times parscrape will re-try to scrape a chunk when encountering an error}

\item{proxy}{a proxy setting function that runs before scraping each chunk}
}
\value{
list with output of scrape_fun in "scraped_results" and a vector of indices of scrape_input elements that could not be scraped in "not_scaped"
}
\description{
parallelize execution of RSelenium
}
